{"version":3,"file":"arcade.modern.mjs","sources":["../src/arcade/debugpanel.js","../src/arcade/joystick.js","../src/arcade/arcade.js"],"sourcesContent":["\n//#region Template\nconst template = document.createElement('template');\ntemplate.innerHTML = `\n<style>\n:host {\n    position:           absolute;\n    top:                10px;\n    right:              10px;\n}\nroot {\n    top:                10px;\n    right:              10px;\n    width:              289px; \n    height:             120px;\n    display:            block;\n    background-color:   #75a8f77a;\n}\nroot * {\n    position:           relative;\n}\n.button-wrapper, .axes-wrapper {\n    display:            flex;\n    flex-wrap:          wrap;\n    float:              left;\n}\nroot .button-div {\n    border: solid 1px black;\n    width:              60px;\n    margin:             5px;\n    padding:            5px;\n}\n.button-wrapper {\n    width:              164px;\n}\n.axes-wrapper {\n    width:              115px;\n    margin:             5px;\n}\n.axes-cell {\n    width:              25px;  \n    height:             25px; \n    margin:             5px;  \n    border:             solid 1px transparent;\n}\n.axes-cell.direction {\n    border:             solid 1px black;\n}\n.axes-cell.center{\n    border:             solid 1px black;\n    background-color:   blue;\n}\n.axes-cell.active{\n    background-color:   red;\n}\n.identifier{\n    position:           absolute;\n    top:                5px;\n    left:               5px;\n    width:              auto;\n    font-weight:        bold;\n    color:              #fff;\n}\n</style>`\n//#endregion\n\nexport class DebugPanel extends HTMLElement {\n    #panelHeight = 120\n    #panelSpacing = 10\n\n    #joystick;\n    #numberOfButtons;\n    #buttonDivs = []; //HTMLElement[]\n\n    #left; //HTMLElement\n    #right; //HTMLElement\n    #up; //HTMLElement\n    #down; //HTMLElement\n\n    #rootElement; //HTMLElement\n\n    Axes = []; //number[]\n\n    constructor(joystick, numOfButtons) {\n        super()\n\n        this.#joystick = joystick\n        this.#numberOfButtons = numOfButtons\n\n        let spaceFromTop = this.#panelSpacing + (this.#joystick.JoystickNumber * (this.#panelHeight + this.#panelSpacing))\n        this.style.top = spaceFromTop + \"px\"\n\n        this.#rootElement = document.createElement('root')\n        this.#rootElement.style.height = this.#panelHeight + \"px\"\n        template.appendChild(this.#rootElement)\n\n        // identifier\n        let identifier = document.createElement(\"div\")\n        identifier.classList.add('identifier')\n        identifier.innerHTML = \"#\" + this.#joystick.JoystickNumber\n        this.#rootElement.appendChild(identifier)\n\n        // axes\n        this.#createHTMLForAxes()\n\n        // this.buttons = buttons\n        this.#createHTMLForButtons()\n        this.#createListenersForButtons()\n\n        this.attachShadow({ mode: 'open' })\n        if (this.shadowRoot) {\n            let temp = template.content.cloneNode(true)\n            temp.appendChild(this.#rootElement)\n            this.shadowRoot.appendChild(temp)\n\n        }\n\n        document.body.appendChild(this)\n    }\n\n    #createListenersForButtons() {\n        for (let i = 0; i < this.#numberOfButtons; i++) {\n            document.addEventListener(this.#joystick.ButtonEvents[i],\n                (e) => this.#handleButtonClicks(e, i))\n        }\n    }\n\n    #handleButtonClicks(event, index) {\n        this.#buttonDivs[index].style.filter =\n            'hue-rotate(' + (Math.random() * 360) + 'deg)'\n    }\n\n    #createHTMLForButtons() {\n        let buttonWrapper = document.createElement(\"div\")\n        buttonWrapper.className = \"button-wrapper\"\n\n        for (let index = 0; index < this.#numberOfButtons; index++) {\n            let buttonDiv = document.createElement(\"div\")\n            buttonDiv.className = \"button-div\"\n            buttonWrapper.appendChild(buttonDiv)\n\n            buttonDiv.style.backgroundColor = \"blue\"\n            buttonDiv.innerHTML = \"Button \" + (index + 1)\n\n            this.#buttonDivs.push(buttonDiv)\n        }\n        this.#rootElement.appendChild(buttonWrapper)\n    }\n\n    #createHTMLForAxes() {\n        let axesWrapper = document.createElement(\"div\")\n        axesWrapper.className = \"axes-wrapper\"\n\n        for (let i = 1; i <= 9; i++) {\n            let cell = document.createElement('div')\n            cell.className = \"axes-cell\"\n            if (i % 2 == 0) cell.classList.add(\"direction\")\n            if (i == 5) cell.classList.add(\"center\")\n            axesWrapper.appendChild(cell)\n\n            switch (i) {\n                case 2:\n                    this.#up = cell\n                    break\n                case 4:\n                    this.#left = cell\n                    break\n                case 6:\n                    this.#right = cell\n                    break\n                case 8:\n                    this.#down = cell\n                    break\n            }\n        }\n\n        this.#rootElement.appendChild(axesWrapper)\n    }\n\n    update() {\n        // X-axe\n        if (this.Axes[0] == 0) {\n            this.#left.classList.remove(\"active\")\n            this.#right.classList.remove(\"active\")\n        }\n        else {\n            if (this.Axes[0] < 0)\n                this.#left.classList.add(\"active\")\n            else if (this.Axes[0] > 0)\n                this.#right.classList.add(\"active\")\n        }\n\n        // Y-axe\n        if (this.Axes[1] == 0) {\n            this.#up.classList.remove(\"active\")\n            this.#down.classList.remove(\"active\")\n        }\n        else {\n            if (this.Axes[1] < 0)\n                this.#up.classList.add(\"active\")\n            else if (this.Axes[1] > 0)\n                this.#down.classList.add(\"active\")\n        }\n    }\n}\n\nwindow.customElements.define(\"debug-panel\", DebugPanel)","import { DebugPanel } from \"./debugpanel\"\n\nexport class Joystick {\n\n    #DEBUG = true\n\n    // BUT1 and BUT2 are the indexes of the redirect function. \n    // When both are pressed, redirect to homepage\n    #BUT1 = 8\n    #BUT2 = 9\n\n    // FIELDS\n    #joystickNumber = 0;\n    #numberOfBUttons = 0;\n    #buttonEvents = []; //string[]\n    #axes = []; //number[]\n\n    #gamepad; //Gamepad\n    #previousGamepad; //Gamepad\n    #previousJoystickDirection;\n\n    // #debugPanell //DebugPanel\n\n    // PROPERTIES\n    // Axes as booleans\n    get Left() { return (this.#axes[0] == -1) }\n    get Right() { return (this.#axes[0] == 1) }\n    get Up() { return (this.#axes[1] == -1) }\n    get Down() { return (this.#axes[1] == 1) }\n    get Neutral() { return this.#axes[0] == 0 && this.#axes[1] == 0 }\n    // Axes as direction\n    // values are -1, 0, 1 because arcade sticks are digital\n    get Y() { return Math.round(this.#axes[1]) }\n    get X() { return Math.round(this.#axes[0]) }\n\n    // Joystick identifier\n    get JoystickNumber() { return this.#joystickNumber }\n    get ButtonEvents() { return this.#buttonEvents }\n\n    // Current gamepad\n    get Gamepad() { return this.#gamepad }\n    set Gamepad(gamepad) { this.#gamepad = gamepad }\n\n    // previous gamepad\n    get PreviousGamepad() { return this.#previousGamepad }\n    set PreviousGamepad(previousGamepad) { this.#previousGamepad = previousGamepad }\n\n    /**\n     * Creates a joystick object for one player\n     * @param joystickNumber The number of the first joystick (starts at 0)\n     * @param numOfButtons The number of buttons needed by your game\n     * @param debug true for in browser gamepad info\n     */\n    constructor(joystickNumber, numOfButtons, debug) {\n        this.#joystickNumber = joystickNumber\n        this.#numberOfBUttons = numOfButtons\n        this.#DEBUG = debug\n\n        for (let i = 0; i < this.#numberOfBUttons; i++) {\n            this.#buttonEvents.push('joystick' + this.JoystickNumber + 'button' + (i))\n        }\n\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'neutral');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'left');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'right');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'up');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'down');\n\n        this.#previousJoystickDirection = 'neutral';\n\n        if (this.#DEBUG) { this.debugPanel = new DebugPanel(this, this.#numberOfBUttons) }\n    }\n\n    update() {\n        if(typeof this.#gamepad === 'undefined' ||\n            typeof this.#gamepad.index === 'undefined' ||\n            typeof navigator.getGamepads()[this.#gamepad.index] === 'undefined'){\n            return;\n        }\n        let gamepad = navigator.getGamepads()[this.#gamepad.index]\n        if (gamepad) { this.#readGamepad(gamepad) }\n    }\n\n    #readGamepad(gamepad) {\n        for (let index = 0; index < this.#numberOfBUttons; index++) {\n            if (this.#buttonPressed(gamepad.buttons[index]) && !this.#buttonPressed(this.#previousGamepad.buttons[index])) {\n                document.dispatchEvent(new Event(this.#buttonEvents[index]))\n            }\n            if (this.#buttonPressed(gamepad.buttons[this.#BUT1]) &&\n                this.#buttonPressed(gamepad.buttons[this.#BUT2]) &&\n                (!this.#buttonPressed(this.#previousGamepad.buttons[this.#BUT1]) || !this.#buttonPressed(this.#previousGamepad.buttons[this.#BUT2]))) {\n                document.dispatchEvent(new Event('redirect'))\n            }\n        }\n\n        // gamepad has 4 axes, first is x, second is y\n        // an axe returns a float, only int is needed\n        this.#axes[0] = Math.round(gamepad.axes[0])\n        this.#axes[1] = Math.round(gamepad.axes[1])\n\n        if (this.#DEBUG) {\n            // update the axes (x and y)\n            this.debugPanel.Axes[0] = this.#axes[0]\n            this.debugPanel.Axes[1] = this.#axes[1]\n\n            this.debugPanel.update()\n        }\n        \n        if(this.Left && this.#previousJoystickDirection !== 'left'){\n            this.#previousJoystickDirection = 'left';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'left'))\n        }\n        if(this.Right && this.#previousJoystickDirection !== 'right'){\n            this.#previousJoystickDirection = 'right';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'right'))\n        }\n        if(this.Up && this.#previousJoystickDirection !== 'up'){\n            this.#previousJoystickDirection = 'up';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'up'))\n        }\n        if(this.Down && this.#previousJoystickDirection !== 'down'){\n            this.#previousJoystickDirection = 'down';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'down'))\n        }\n        if(this.Neutral && this.#previousJoystickDirection !== 'neutral'){\n            this.#previousJoystickDirection = 'neutral';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'neutral'))\n        }\n\n        // console.log(this.#previousJoystickDirection);\n        this.#previousGamepad = gamepad\n    }\n    /**\n     * Helper function to filter some bad input\n     * @param b \n     */\n    #buttonPressed(b) {\n        if (typeof (b) == \"object\") {\n            return b.pressed\n        }\n        return b == 1.0\n    }\n\n    destroy() {\n        if (this.#DEBUG) this.debugPanel.remove()\n    }\n}","\nimport { Joystick } from \"./joystick\"\n\nexport default class Arcade {\n    #DEBUG; //boolean\n    #joysticks; //Joystick[]\n    #REDIRECT_URL = \"http://hr-cmgt.github.io/arcade-server\"\n    #multiplayer = false\n    #game;\n\n    // PROPERTIES\n    get Joysticks() { return this.#joysticks }\n\n    /**\n     * Creates an arcade 'cabinet' \n     * @param mp 'true' for 2 joystick multiplayer Arcade (default single player)\n     */\n    constructor(game, mp = false, debug = false) {\n        this.#game = game\n        this.#multiplayer = mp\n        this.#DEBUG = debug\n        this.#joysticks = []\n\n        if (this.#DEBUG) this.#showStatus(\"Gamepad is NOT connected. Press a button to connect\")\n\n        document.addEventListener(\"redirect\", () => this.#onRedirect())\n        window.addEventListener(\"gamepadconnected\", (e) => this.#onGamePadConnected(e))\n        window.addEventListener(\"gamepaddisconnected\", (e) => this.#onGamePadDisconnected(e))\n    }\n\n    /**\n     * Handles redirect fired from joystick\n     */\n    #onRedirect() {\n        if (this.#DEBUG) { console.log('redirect!!') }\n        window.location.href = this.#REDIRECT_URL\n    }\n\n    /**\n     * Handles connecting a joystick\n     * @param e Gamepad event\n     */\n    #onGamePadConnected(e) {\n        if (this.#DEBUG) {\n            console.log('Game pad connected')\n            console.log(\"Joystick number: \" + e.gamepad.index)\n        }\n        if ((!this.#multiplayer && this.#joysticks.length == 0) || this.#multiplayer) {\n            let joystick = this.createAndAddJoystick(e.gamepad.index, 6)\n\n            joystick.PreviousGamepad = joystick.Gamepad\n            joystick.Gamepad = e.gamepad\n            if (joystick.PreviousGamepad == null) {\n                joystick.PreviousGamepad = e.gamepad\n            }\n        }\n\n        if (this.#DEBUG) this.#removeStatus()\n    }\n\n    /**\n     * Handles disconnecting a joystick\n     * @param e Gamepad event\n     */\n    #onGamePadDisconnected(e) {\n        if (this.#DEBUG) { console.log('Game pad disconnected') }\n        if (this.#DEBUG) this.#showStatus(\"Gamepad is NOT connected. Connect the gamepad and press a button.\")\n        this.removeJoystick(e.gamepad.index)\n        this.#game.disconnect()\n    }\n\n    /**\n     * Creates an Joystick and adds it to this arcade\n     * @param joystickNumber Unique identifier given by the joystick\n     * @param numOfButtons Sets number of buttons on joystick\n     */\n    createAndAddJoystick(joystickNumber, numOfButtons) {\n        let joystickCheck = this.getJoystickByNumber(joystickNumber)\n        if (joystickCheck != null) {\n            return joystickCheck\n        }\n\n        let joystickNew = new Joystick(joystickNumber, numOfButtons, this.#DEBUG)\n        this.#joysticks[joystickNumber] = joystickNew\n        if (joystickNew) {\n            document.dispatchEvent(new CustomEvent(\"joystickcreated\", { detail: joystickNumber }))\n            console.log(\"joystick created\")\n        }\n        return joystickNew\n    }\n\n    /**\n     * Removes a Joystick from this arcade\n     * @param joystickNumber Unique identifier of the joystick\n     */\n    removeJoystick(joystickNumber) {\n        let joystickCheck = this.getJoystickByNumber(joystickNumber)\n        if (joystickCheck == null) {\n            return\n        }\n\n        var index = this.#joysticks.indexOf(joystickCheck)\n        if(typeof this.#joysticks[index].destroy === 'function'){\n            this.#joysticks[index].destroy()\n        }\n        if (index > -1) {\n            this.#joysticks.splice(index, 1)\n        }\n    }\n\n    /**\n     * Get a Joystick with its unique identifier\n     * @param joystickNumber Unique identifier given by the joystick\n     */\n    getJoystickByNumber(joystickNumber) {\n        for (let joystick of this.#joysticks) {\n            if (joystick.JoystickNumber == joystickNumber) {\n                return joystick\n            }\n        }\n        return null\n    }\n\n    #showStatus(content) {\n        let container\n        let p\n        if (!(container = document.getElementsByTagName(\"status\")[0])) {\n            container = document.createElement(\"status\")\n            document.body.append(container)\n        }\n        if (container) {\n            if (!(p = container.getElementsByTagName(\"p\")[0])) {\n                p = document.createElement(\"p\")\n                container.appendChild(p)\n            }\n        }\n        if (p) {\n            p.innerHTML = content\n        }\n    }\n\n    #removeStatus() {\n        let status\n        if (status = document.getElementsByTagName(\"status\")[0]) {\n            status.remove()\n        }\n    }\n}"],"names":["template","document","createElement","innerHTML","_panelHeight","_classPrivateFieldLooseKey","_panelSpacing","_joystick","_numberOfButtons","_buttonDivs","_left","_right","_up","_down","_rootElement","_createListenersForButtons","_handleButtonClicks","_createHTMLForButtons","_createHTMLForAxes","DebugPanel","HTMLElement","constructor","joystick","numOfButtons","super","Object","defineProperty","this","value","_createHTMLForAxes2","_createHTMLForButtons2","_handleButtonClicks2","_createListenersForButtons2","writable","Axes","_classPrivateFieldLooseBase","spaceFromTop","JoystickNumber","style","top","height","appendChild","identifier","classList","add","attachShadow","mode","shadowRoot","temp","content","cloneNode","body","update","remove","i","addEventListener","ButtonEvents","e","event","index","filter","Math","random","buttonWrapper","className","buttonDiv","backgroundColor","push","axesWrapper","cell","window","customElements","define","_DEBUG","_BUT","_BUT2","_joystickNumber","_numberOfBUttons","_buttonEvents","_axes","_gamepad","_previousGamepad","_previousJoystickDirection","_readGamepad","_buttonPressed","Joystick","Left","Right","Up","Down","Neutral","Y","round","X","Gamepad","gamepad","PreviousGamepad","previousGamepad","joystickNumber","debug","_buttonPressed2","_readGamepad2","debugPanel","navigator","getGamepads","destroy","buttons","dispatchEvent","Event","axes","b","pressed","_joysticks","_REDIRECT_URL","_multiplayer","_game","_onRedirect","_onGamePadConnected","_onGamePadDisconnected","_showStatus","_removeStatus","Arcade","Joysticks","game","mp","_removeStatus2","_showStatus2","_onGamePadDisconnected2","_onGamePadConnected2","_onRedirect2","createAndAddJoystick","joystickCheck","getJoystickByNumber","joystickNew","CustomEvent","detail","console","log","removeJoystick","indexOf","splice","location","href","length","disconnect","container","p","getElementsByTagName","append","status"],"mappings":"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"}