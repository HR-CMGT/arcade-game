{"mappings":"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","sources":["src/arcade/arcade.js","src/game.js","src/arcade/joystick.js","src/arcade/debugpanel.js"],"sourcesContent":["import { Game } from \"../game\"\nimport { Joystick } from \"./joystick\"\n\nexport default class Arcade {\n    #DEBUG; //boolean\n    #joysticks; //Joystick[]\n    #REDIRECT_URL = \"http://hr-cmgt.github.io/arcade-server\"\n    #multiplayer = false\n    #game;\n\n    // PROPERTIES\n    get Joysticks() { return this.#joysticks }\n\n    /**\n     * Creates an arcade 'cabinet' \n     * @param mp 'true' for 2 joystick multiplayer Arcade (default single player)\n     */\n    constructor(game, mp = false, debug = false) {\n        this.#game = game\n        this.#multiplayer = mp\n        this.#DEBUG = debug\n        this.#joysticks = []\n\n        if (this.#DEBUG) this.#showStatus(\"Gamepad is NOT connected. Press a button to connect\")\n\n        document.addEventListener(\"redirect\", () => this.#onRedirect())\n        window.addEventListener(\"gamepadconnected\", (e) => this.#onGamePadConnected(e))\n        window.addEventListener(\"gamepaddisconnected\", (e) => this.#onGamePadDisconnected(e))\n    }\n\n    /**\n     * Handles redirect fired from joystick\n     */\n    #onRedirect() {\n        if (this.#DEBUG) { console.log('redirect!!') }\n        window.location.href = this.#REDIRECT_URL\n    }\n\n    /**\n     * Handles connecting a joystick\n     * @param e Gamepad event\n     */\n    #onGamePadConnected(e) {\n        if (this.#DEBUG) {\n            console.log('Game pad connected')\n            console.log(\"Joystick number: \" + e.gamepad.index)\n        }\n        if ((!this.#multiplayer && this.#joysticks.length == 0) || this.#multiplayer) {\n            let joystick = this.createAndAddJoystick(e.gamepad.index, 6)\n\n            joystick.PreviousGamepad = joystick.Gamepad\n            joystick.Gamepad = e.gamepad\n            if (joystick.PreviousGamepad == null) {\n                joystick.PreviousGamepad = e.gamepad\n            }\n        }\n\n        if (this.#DEBUG) this.#removeStatus()\n    }\n\n    /**\n     * Handles disconnecting a joystick\n     * @param e Gamepad event\n     */\n    #onGamePadDisconnected(e) {\n        if (this.#DEBUG) { console.log('Game pad disconnected') }\n        if (this.#DEBUG) this.#showStatus(\"Gamepad is NOT connected. Connect the gamepad and press a button.\")\n        this.removeJoystick(e.gamepad.index)\n        this.#game.disconnect()\n    }\n\n    /**\n     * Creates an Joystick and adds it to this arcade\n     * @param joystickNumber Unique identifier given by the joystick\n     * @param numOfButtons Sets number of buttons on joystick\n     */\n    createAndAddJoystick(joystickNumber, numOfButtons) {\n        let joystickCheck = this.getJoystickByNumber(joystickNumber)\n        if (joystickCheck != null) {\n            return joystickCheck\n        }\n\n        let joystickNew = new Joystick(joystickNumber, numOfButtons, this.#DEBUG)\n        this.#joysticks[joystickNumber] = joystickNew\n        if (joystickNew) {\n            document.dispatchEvent(new CustomEvent(\"joystickcreated\", { detail: joystickNumber }))\n            console.log(\"joystick created\")\n        }\n        return joystickNew\n    }\n\n    /**\n     * Removes a Joystick from this arcade\n     * @param joystickNumber Unique identifier of the joystick\n     */\n    removeJoystick(joystickNumber) {\n        let joystickCheck = this.getJoystickByNumber(joystickNumber)\n        if (joystickCheck == null) {\n            return\n        }\n\n        var index = this.#joysticks.indexOf(joystickCheck)\n        if(typeof this.#joysticks[index].destroy === 'function'){\n            this.#joysticks[index].destroy()\n        }\n        if (index > -1) {\n            this.#joysticks.splice(index, 1)\n        }\n    }\n\n    /**\n     * Get a Joystick with its unique identifier\n     * @param joystickNumber Unique identifier given by the joystick\n     */\n    getJoystickByNumber(joystickNumber) {\n        for (let joystick of this.#joysticks) {\n            if (joystick.JoystickNumber == joystickNumber) {\n                return joystick\n            }\n        }\n        return null\n    }\n\n    #showStatus(content) {\n        let container\n        let p\n        if (!(container = document.getElementsByTagName(\"status\")[0])) {\n            container = document.createElement(\"status\")\n            document.body.append(container)\n        }\n        if (container) {\n            if (!(p = container.getElementsByTagName(\"p\")[0])) {\n                p = document.createElement(\"p\")\n                container.appendChild(p)\n            }\n        }\n        if (p) {\n            p.innerHTML = content\n        }\n    }\n\n    #removeStatus() {\n        let status\n        if (status = document.getElementsByTagName(\"status\")[0]) {\n            status.remove()\n        }\n    }\n}","// import { Arcade } from './arcade/arcade'\n\n// export class Game {\n//     #arcade;\n//     #joystickListener;\n\n//     constructor() {\n//         // this = current game\n//         // true = multiplayer\n//         // true = debug\n//         this.#arcade = new Arcade(this, true, true)\n        \n//         // The game must wait for de joysticks to connect\n//         console.log(\"waiting for joysticks to connect\")\n//         this.#joystickListener = (e) => this.#joyStickFound(e)\n//         document.addEventListener(\"joystickcreated\",  this.#joystickListener)\n//     }\n\n//     #joyStickFound(e) {\n//         let joystick = this.#arcade.Joysticks[e.detail]\n        \n//         // debug, this shows you the names of the buttons when they are pressed\n//         for (const buttonEvent of joystick.ButtonEvents) {\n//             document.addEventListener(buttonEvent, () => console.log(buttonEvent))\n//         }\n\n//         this.update();\n//     }\n\n//     update() {\n//         for (let joystick of this.#arcade.Joysticks) {\n//             joystick.update()\n//         }\n\n//         requestAnimationFrame(() => this.update());\n//     }\n\n//     disconnect() {\n//         document.removeEventListener(\"joystickcreated\", this.#joystickListener)\n//     }\n// }\n\n// new Game()","import { DebugPanel } from \"./debugpanel\"\n\nexport class Joystick {\n\n    #DEBUG = true\n\n    // BUT1 and BUT2 are the indexes of the redirect function. \n    // When both are pressed, redirect to homepage\n    #BUT1 = 8\n    #BUT2 = 9\n\n    // FIELDS\n    #joystickNumber = 0;\n    #numberOfBUttons = 0;\n    #buttonEvents = []; //string[]\n    #axes = []; //number[]\n\n    #gamepad; //Gamepad\n    #previousGamepad; //Gamepad\n    #previousJoystickDirection;\n\n    // #debugPanell //DebugPanel\n\n    // PROPERTIES\n    // Axes as booleans\n    get Left() { return (this.#axes[0] == -1) }\n    get Right() { return (this.#axes[0] == 1) }\n    get Up() { return (this.#axes[1] == -1) }\n    get Down() { return (this.#axes[1] == 1) }\n    get Neutral() { return this.#axes[0] == 0 && this.#axes[1] == 0 }\n    // Axes as direction\n    // values are -1, 0, 1 because arcade sticks are digital\n    get Y() { return Math.round(this.#axes[1]) }\n    get X() { return Math.round(this.#axes[0]) }\n\n    // Joystick identifier\n    get JoystickNumber() { return this.#joystickNumber }\n    get ButtonEvents() { return this.#buttonEvents }\n\n    // Current gamepad\n    get Gamepad() { return this.#gamepad }\n    set Gamepad(gamepad) { this.#gamepad = gamepad }\n\n    // previous gamepad\n    get PreviousGamepad() { return this.#previousGamepad }\n    set PreviousGamepad(previousGamepad) { this.#previousGamepad = previousGamepad }\n\n    /**\n     * Creates a joystick object for one player\n     * @param joystickNumber The number of the first joystick (starts at 0)\n     * @param numOfButtons The number of buttons needed by your game\n     * @param debug true for in browser gamepad info\n     */\n    constructor(joystickNumber, numOfButtons, debug) {\n        this.#joystickNumber = joystickNumber\n        this.#numberOfBUttons = numOfButtons\n        this.#DEBUG = debug\n\n        for (let i = 0; i < this.#numberOfBUttons; i++) {\n            this.#buttonEvents.push('joystick' + this.JoystickNumber + 'button' + (i))\n        }\n\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'neutral');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'left');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'right');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'up');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'down');\n\n        this.#previousJoystickDirection = 'neutral';\n\n        if (this.#DEBUG) { this.debugPanel = new DebugPanel(this, this.#numberOfBUttons) }\n    }\n\n    update() {\n        if(typeof this.#gamepad === 'undefined' ||\n            typeof this.#gamepad.index === 'undefined' ||\n            typeof navigator.getGamepads()[this.#gamepad.index] === 'undefined'){\n            return;\n        }\n        let gamepad = navigator.getGamepads()[this.#gamepad.index]\n        if (gamepad) { this.#readGamepad(gamepad) }\n    }\n\n    #readGamepad(gamepad) {\n        for (let index = 0; index < this.#numberOfBUttons; index++) {\n            if (this.#buttonPressed(gamepad.buttons[index]) && !this.#buttonPressed(this.#previousGamepad.buttons[index])) {\n                document.dispatchEvent(new Event(this.#buttonEvents[index]))\n            }\n            if (this.#buttonPressed(gamepad.buttons[this.#BUT1]) &&\n                this.#buttonPressed(gamepad.buttons[this.#BUT2]) &&\n                (!this.#buttonPressed(this.#previousGamepad.buttons[this.#BUT1]) || !this.#buttonPressed(this.#previousGamepad.buttons[this.#BUT2]))) {\n                document.dispatchEvent(new Event('redirect'))\n            }\n        }\n\n        // gamepad has 4 axes, first is x, second is y\n        // an axe returns a float, only int is needed\n        this.#axes[0] = Math.round(gamepad.axes[0])\n        this.#axes[1] = Math.round(gamepad.axes[1])\n\n        if (this.#DEBUG) {\n            // update the axes (x and y)\n            this.debugPanel.Axes[0] = this.#axes[0]\n            this.debugPanel.Axes[1] = this.#axes[1]\n\n            this.debugPanel.update()\n        }\n        \n        if(this.Left && this.#previousJoystickDirection !== 'left'){\n            this.#previousJoystickDirection = 'left';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'left'))\n        }\n        if(this.Right && this.#previousJoystickDirection !== 'right'){\n            this.#previousJoystickDirection = 'right';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'right'))\n        }\n        if(this.Up && this.#previousJoystickDirection !== 'up'){\n            this.#previousJoystickDirection = 'up';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'up'))\n        }\n        if(this.Down && this.#previousJoystickDirection !== 'down'){\n            this.#previousJoystickDirection = 'down';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'down'))\n        }\n        if(this.Neutral && this.#previousJoystickDirection !== 'neutral'){\n            this.#previousJoystickDirection = 'neutral';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'neutral'))\n        }\n\n        // console.log(this.#previousJoystickDirection);\n        this.#previousGamepad = gamepad\n    }\n    /**\n     * Helper function to filter some bad input\n     * @param b \n     */\n    #buttonPressed(b) {\n        if (typeof (b) == \"object\") {\n            return b.pressed\n        }\n        return b == 1.0\n    }\n\n    destroy() {\n        if (this.#DEBUG) this.debugPanel.remove()\n    }\n}","import { Joystick } from \"./joystick\"\n\n//#region Template\nconst template = document.createElement('template');\ntemplate.innerHTML = `\n<style>\n:host {\n    position:           absolute;\n    top:                10px;\n    right:              10px;\n}\nroot {\n    top:                10px;\n    right:              10px;\n    width:              289px; \n    height:             120px;\n    display:            block;\n    background-color:   #75a8f77a;\n}\nroot * {\n    position:           relative;\n}\n.button-wrapper, .axes-wrapper {\n    display:            flex;\n    flex-wrap:          wrap;\n    float:              left;\n}\nroot .button-div {\n    border: solid 1px black;\n    width:              60px;\n    margin:             5px;\n    padding:            5px;\n}\n.button-wrapper {\n    width:              164px;\n}\n.axes-wrapper {\n    width:              115px;\n    margin:             5px;\n}\n.axes-cell {\n    width:              25px;  \n    height:             25px; \n    margin:             5px;  \n    border:             solid 1px transparent;\n}\n.axes-cell.direction {\n    border:             solid 1px black;\n}\n.axes-cell.center{\n    border:             solid 1px black;\n    background-color:   blue;\n}\n.axes-cell.active{\n    background-color:   red;\n}\n.identifier{\n    position:           absolute;\n    top:                5px;\n    left:               5px;\n    width:              auto;\n    font-weight:        bold;\n    color:              #fff;\n}\n</style>`\n//#endregion\n\nexport class DebugPanel extends HTMLElement {\n    #panelHeight = 120\n    #panelSpacing = 10\n\n    #joystick;\n    #numberOfButtons;\n    #buttonDivs = []; //HTMLElement[]\n\n    #left; //HTMLElement\n    #right; //HTMLElement\n    #up; //HTMLElement\n    #down; //HTMLElement\n\n    #rootElement; //HTMLElement\n\n    Axes = []; //number[]\n\n    constructor(joystick, numOfButtons) {\n        super()\n\n        this.#joystick = joystick\n        this.#numberOfButtons = numOfButtons\n\n        let spaceFromTop = this.#panelSpacing + (this.#joystick.JoystickNumber * (this.#panelHeight + this.#panelSpacing))\n        this.style.top = spaceFromTop + \"px\"\n\n        this.#rootElement = document.createElement('root')\n        this.#rootElement.style.height = this.#panelHeight + \"px\"\n        template.appendChild(this.#rootElement)\n\n        // identifier\n        let identifier = document.createElement(\"div\")\n        identifier.classList.add('identifier')\n        identifier.innerHTML = \"#\" + this.#joystick.JoystickNumber\n        this.#rootElement.appendChild(identifier)\n\n        // axes\n        this.#createHTMLForAxes()\n\n        // this.buttons = buttons\n        this.#createHTMLForButtons()\n        this.#createListenersForButtons()\n\n        this.attachShadow({ mode: 'open' })\n        if (this.shadowRoot) {\n            let temp = template.content.cloneNode(true)\n            temp.appendChild(this.#rootElement)\n            this.shadowRoot.appendChild(temp)\n\n        }\n\n        document.body.appendChild(this)\n    }\n\n    #createListenersForButtons() {\n        for (let i = 0; i < this.#numberOfButtons; i++) {\n            document.addEventListener(this.#joystick.ButtonEvents[i],\n                (e) => this.#handleButtonClicks(e, i))\n        }\n    }\n\n    #handleButtonClicks(event, index) {\n        this.#buttonDivs[index].style.filter =\n            'hue-rotate(' + (Math.random() * 360) + 'deg)'\n    }\n\n    #createHTMLForButtons() {\n        let buttonWrapper = document.createElement(\"div\")\n        buttonWrapper.className = \"button-wrapper\"\n\n        for (let index = 0; index < this.#numberOfButtons; index++) {\n            let buttonDiv = document.createElement(\"div\")\n            buttonDiv.className = \"button-div\"\n            buttonWrapper.appendChild(buttonDiv)\n\n            buttonDiv.style.backgroundColor = \"blue\"\n            buttonDiv.innerHTML = \"Button \" + (index + 1)\n\n            this.#buttonDivs.push(buttonDiv)\n        }\n        this.#rootElement.appendChild(buttonWrapper)\n    }\n\n    #createHTMLForAxes() {\n        let axesWrapper = document.createElement(\"div\")\n        axesWrapper.className = \"axes-wrapper\"\n\n        for (let i = 1; i <= 9; i++) {\n            let cell = document.createElement('div')\n            cell.className = \"axes-cell\"\n            if (i % 2 == 0) cell.classList.add(\"direction\")\n            if (i == 5) cell.classList.add(\"center\")\n            axesWrapper.appendChild(cell)\n\n            switch (i) {\n                case 2:\n                    this.#up = cell\n                    break\n                case 4:\n                    this.#left = cell\n                    break\n                case 6:\n                    this.#right = cell\n                    break\n                case 8:\n                    this.#down = cell\n                    break\n            }\n        }\n\n        this.#rootElement.appendChild(axesWrapper)\n    }\n\n    update() {\n        // X-axe\n        if (this.Axes[0] == 0) {\n            this.#left.classList.remove(\"active\")\n            this.#right.classList.remove(\"active\")\n        }\n        else {\n            if (this.Axes[0] < 0)\n                this.#left.classList.add(\"active\")\n            else if (this.Axes[0] > 0)\n                this.#right.classList.add(\"active\")\n        }\n\n        // Y-axe\n        if (this.Axes[1] == 0) {\n            this.#up.classList.remove(\"active\")\n            this.#down.classList.remove(\"active\")\n        }\n        else {\n            if (this.Axes[1] < 0)\n                this.#up.classList.add(\"active\")\n            else if (this.Axes[1] > 0)\n                this.#down.classList.add(\"active\")\n        }\n    }\n}\n\nwindow.customElements.define(\"debug-panel\", DebugPanel)"],"names":[],"version":3,"file":"arcade.js.map"}