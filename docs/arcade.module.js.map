{"version":3,"file":"arcade.module.js","sources":["../src/arcade/debugpanel.js","../src/arcade/joystick.js","../src/arcade/arcade.js"],"sourcesContent":["import { Joystick } from \"./joystick\"\n\n//#region Template\nconst template = document.createElement('template');\ntemplate.innerHTML = `\n<style>\n:host {\n    position:           absolute;\n    top:                10px;\n    right:              10px;\n}\nroot {\n    top:                10px;\n    right:              10px;\n    width:              289px; \n    height:             120px;\n    display:            block;\n    background-color:   #75a8f77a;\n}\nroot * {\n    position:           relative;\n}\n.button-wrapper, .axes-wrapper {\n    display:            flex;\n    flex-wrap:          wrap;\n    float:              left;\n}\nroot .button-div {\n    border: solid 1px black;\n    width:              60px;\n    margin:             5px;\n    padding:            5px;\n}\n.button-wrapper {\n    width:              164px;\n}\n.axes-wrapper {\n    width:              115px;\n    margin:             5px;\n}\n.axes-cell {\n    width:              25px;  \n    height:             25px; \n    margin:             5px;  \n    border:             solid 1px transparent;\n}\n.axes-cell.direction {\n    border:             solid 1px black;\n}\n.axes-cell.center{\n    border:             solid 1px black;\n    background-color:   blue;\n}\n.axes-cell.active{\n    background-color:   red;\n}\n.identifier{\n    position:           absolute;\n    top:                5px;\n    left:               5px;\n    width:              auto;\n    font-weight:        bold;\n    color:              #fff;\n}\n</style>`\n//#endregion\n\nexport class DebugPanel extends HTMLElement {\n    #panelHeight = 120\n    #panelSpacing = 10\n\n    #joystick;\n    #numberOfButtons;\n    #buttonDivs = []; //HTMLElement[]\n\n    #left; //HTMLElement\n    #right; //HTMLElement\n    #up; //HTMLElement\n    #down; //HTMLElement\n\n    #rootElement; //HTMLElement\n\n    Axes = []; //number[]\n\n    constructor(joystick, numOfButtons) {\n        super()\n\n        this.#joystick = joystick\n        this.#numberOfButtons = numOfButtons\n\n        let spaceFromTop = this.#panelSpacing + (this.#joystick.JoystickNumber * (this.#panelHeight + this.#panelSpacing))\n        this.style.top = spaceFromTop + \"px\"\n\n        this.#rootElement = document.createElement('root')\n        this.#rootElement.style.height = this.#panelHeight + \"px\"\n        template.appendChild(this.#rootElement)\n\n        // identifier\n        let identifier = document.createElement(\"div\")\n        identifier.classList.add('identifier')\n        identifier.innerHTML = \"#\" + this.#joystick.JoystickNumber\n        this.#rootElement.appendChild(identifier)\n\n        // axes\n        this.#createHTMLForAxes()\n\n        // this.buttons = buttons\n        this.#createHTMLForButtons()\n        this.#createListenersForButtons()\n\n        this.attachShadow({ mode: 'open' })\n        if (this.shadowRoot) {\n            let temp = template.content.cloneNode(true)\n            temp.appendChild(this.#rootElement)\n            this.shadowRoot.appendChild(temp)\n\n        }\n\n        document.body.appendChild(this)\n    }\n\n    #createListenersForButtons() {\n        for (let i = 0; i < this.#numberOfButtons; i++) {\n            document.addEventListener(this.#joystick.ButtonEvents[i],\n                (e) => this.#handleButtonClicks(e, i))\n        }\n    }\n\n    #handleButtonClicks(event, index) {\n        this.#buttonDivs[index].style.filter =\n            'hue-rotate(' + (Math.random() * 360) + 'deg)'\n    }\n\n    #createHTMLForButtons() {\n        let buttonWrapper = document.createElement(\"div\")\n        buttonWrapper.className = \"button-wrapper\"\n\n        for (let index = 0; index < this.#numberOfButtons; index++) {\n            let buttonDiv = document.createElement(\"div\")\n            buttonDiv.className = \"button-div\"\n            buttonWrapper.appendChild(buttonDiv)\n\n            buttonDiv.style.backgroundColor = \"blue\"\n            buttonDiv.innerHTML = \"Button \" + (index + 1)\n\n            this.#buttonDivs.push(buttonDiv)\n        }\n        this.#rootElement.appendChild(buttonWrapper)\n    }\n\n    #createHTMLForAxes() {\n        let axesWrapper = document.createElement(\"div\")\n        axesWrapper.className = \"axes-wrapper\"\n\n        for (let i = 1; i <= 9; i++) {\n            let cell = document.createElement('div')\n            cell.className = \"axes-cell\"\n            if (i % 2 == 0) cell.classList.add(\"direction\")\n            if (i == 5) cell.classList.add(\"center\")\n            axesWrapper.appendChild(cell)\n\n            switch (i) {\n                case 2:\n                    this.#up = cell\n                    break\n                case 4:\n                    this.#left = cell\n                    break\n                case 6:\n                    this.#right = cell\n                    break\n                case 8:\n                    this.#down = cell\n                    break\n            }\n        }\n\n        this.#rootElement.appendChild(axesWrapper)\n    }\n\n    update() {\n        // X-axe\n        if (this.Axes[0] == 0) {\n            this.#left.classList.remove(\"active\")\n            this.#right.classList.remove(\"active\")\n        }\n        else {\n            if (this.Axes[0] < 0)\n                this.#left.classList.add(\"active\")\n            else if (this.Axes[0] > 0)\n                this.#right.classList.add(\"active\")\n        }\n\n        // Y-axe\n        if (this.Axes[1] == 0) {\n            this.#up.classList.remove(\"active\")\n            this.#down.classList.remove(\"active\")\n        }\n        else {\n            if (this.Axes[1] < 0)\n                this.#up.classList.add(\"active\")\n            else if (this.Axes[1] > 0)\n                this.#down.classList.add(\"active\")\n        }\n    }\n}\n\nwindow.customElements.define(\"debug-panel\", DebugPanel)","import { DebugPanel } from \"./debugpanel\"\n\nexport class Joystick {\n\n    #DEBUG = true\n\n    // BUT1 and BUT2 are the indexes of the redirect function. \n    // When both are pressed, redirect to homepage\n    #BUT1 = 8\n    #BUT2 = 9\n\n    // FIELDS\n    #joystickNumber = 0;\n    #numberOfBUttons = 0;\n    #buttonEvents = []; //string[]\n    #axes = []; //number[]\n\n    #gamepad; //Gamepad\n    #previousGamepad; //Gamepad\n    #previousJoystickDirection;\n\n    // #debugPanell //DebugPanel\n\n    // PROPERTIES\n    // Axes as booleans\n    get Left() { return (this.#axes[0] == -1) }\n    get Right() { return (this.#axes[0] == 1) }\n    get Up() { return (this.#axes[1] == -1) }\n    get Down() { return (this.#axes[1] == 1) }\n    get Neutral() { return this.#axes[0] == 0 && this.#axes[1] == 0 }\n    // Axes as direction\n    // values are -1, 0, 1 because arcade sticks are digital\n    get Y() { return Math.round(this.#axes[1]) }\n    get X() { return Math.round(this.#axes[0]) }\n\n    // Joystick identifier\n    get JoystickNumber() { return this.#joystickNumber }\n    get ButtonEvents() { return this.#buttonEvents }\n\n    // Current gamepad\n    get Gamepad() { return this.#gamepad }\n    set Gamepad(gamepad) { this.#gamepad = gamepad }\n\n    // previous gamepad\n    get PreviousGamepad() { return this.#previousGamepad }\n    set PreviousGamepad(previousGamepad) { this.#previousGamepad = previousGamepad }\n\n    /**\n     * Creates a joystick object for one player\n     * @param joystickNumber The number of the first joystick (starts at 0)\n     * @param numOfButtons The number of buttons needed by your game\n     * @param debug true for in browser gamepad info\n     */\n    constructor(joystickNumber, numOfButtons, debug) {\n        this.#joystickNumber = joystickNumber\n        this.#numberOfBUttons = numOfButtons\n        this.#DEBUG = debug\n\n        for (let i = 0; i < this.#numberOfBUttons; i++) {\n            this.#buttonEvents.push('joystick' + this.JoystickNumber + 'button' + (i))\n        }\n\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'neutral');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'left');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'right');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'up');\n        this.#buttonEvents.push('joystick' + this.JoystickNumber + 'down');\n\n        this.#previousJoystickDirection = 'neutral';\n\n        if (this.#DEBUG) { this.debugPanel = new DebugPanel(this, this.#numberOfBUttons) }\n    }\n\n    update() {\n        if(typeof this.#gamepad === 'undefined' ||\n            typeof this.#gamepad.index === 'undefined' ||\n            typeof navigator.getGamepads()[this.#gamepad.index] === 'undefined'){\n            return;\n        }\n        let gamepad = navigator.getGamepads()[this.#gamepad.index]\n        if (gamepad) { this.#readGamepad(gamepad) }\n    }\n\n    #readGamepad(gamepad) {\n        for (let index = 0; index < this.#numberOfBUttons; index++) {\n            if (this.#buttonPressed(gamepad.buttons[index]) && !this.#buttonPressed(this.#previousGamepad.buttons[index])) {\n                document.dispatchEvent(new Event(this.#buttonEvents[index]))\n            }\n            if (this.#buttonPressed(gamepad.buttons[this.#BUT1]) &&\n                this.#buttonPressed(gamepad.buttons[this.#BUT2]) &&\n                (!this.#buttonPressed(this.#previousGamepad.buttons[this.#BUT1]) || !this.#buttonPressed(this.#previousGamepad.buttons[this.#BUT2]))) {\n                document.dispatchEvent(new Event('redirect'))\n            }\n        }\n\n        // gamepad has 4 axes, first is x, second is y\n        // an axe returns a float, only int is needed\n        this.#axes[0] = Math.round(gamepad.axes[0])\n        this.#axes[1] = Math.round(gamepad.axes[1])\n\n        if (this.#DEBUG) {\n            // update the axes (x and y)\n            this.debugPanel.Axes[0] = this.#axes[0]\n            this.debugPanel.Axes[1] = this.#axes[1]\n\n            this.debugPanel.update()\n        }\n        \n        if(this.Left && this.#previousJoystickDirection !== 'left'){\n            this.#previousJoystickDirection = 'left';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'left'))\n        }\n        if(this.Right && this.#previousJoystickDirection !== 'right'){\n            this.#previousJoystickDirection = 'right';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'right'))\n        }\n        if(this.Up && this.#previousJoystickDirection !== 'up'){\n            this.#previousJoystickDirection = 'up';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'up'))\n        }\n        if(this.Down && this.#previousJoystickDirection !== 'down'){\n            this.#previousJoystickDirection = 'down';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'down'))\n        }\n        if(this.Neutral && this.#previousJoystickDirection !== 'neutral'){\n            this.#previousJoystickDirection = 'neutral';\n            document.dispatchEvent(new Event('joystick' + this.JoystickNumber + 'neutral'))\n        }\n\n        // console.log(this.#previousJoystickDirection);\n        this.#previousGamepad = gamepad\n    }\n    /**\n     * Helper function to filter some bad input\n     * @param b \n     */\n    #buttonPressed(b) {\n        if (typeof (b) == \"object\") {\n            return b.pressed\n        }\n        return b == 1.0\n    }\n\n    destroy() {\n        if (this.#DEBUG) this.debugPanel.remove()\n    }\n}","import { Game } from \"../game\"\nimport { Joystick } from \"./joystick\"\n\nexport class Arcade {\n    #DEBUG; //boolean\n    #joysticks; //Joystick[]\n    #REDIRECT_URL = \"http://hr-cmgt.github.io/arcade-server\"\n    #multiplayer = false\n    #game;\n\n    // PROPERTIES\n    get Joysticks() { return this.#joysticks }\n\n    /**\n     * Creates an arcade 'cabinet' \n     * @param mp 'true' for 2 joystick multiplayer Arcade (default single player)\n     */\n    constructor(game, mp = false, debug = false) {\n        this.#game = game\n        this.#multiplayer = mp\n        this.#DEBUG = debug\n        this.#joysticks = []\n\n        if (this.#DEBUG) this.#showStatus(\"Gamepad is NOT connected. Press a button to connect\")\n\n        document.addEventListener(\"redirect\", () => this.#onRedirect())\n        window.addEventListener(\"gamepadconnected\", (e) => this.#onGamePadConnected(e))\n        window.addEventListener(\"gamepaddisconnected\", (e) => this.#onGamePadDisconnected(e))\n    }\n\n    /**\n     * Handles redirect fired from joystick\n     */\n    #onRedirect() {\n        if (this.#DEBUG) { console.log('redirect!!') }\n        window.location.href = this.#REDIRECT_URL\n    }\n\n    /**\n     * Handles connecting a joystick\n     * @param e Gamepad event\n     */\n    #onGamePadConnected(e) {\n        if (this.#DEBUG) {\n            console.log('Game pad connected')\n            console.log(\"Joystick number: \" + e.gamepad.index)\n        }\n        if ((!this.#multiplayer && this.#joysticks.length == 0) || this.#multiplayer) {\n            let joystick = this.createAndAddJoystick(e.gamepad.index, 6)\n\n            joystick.PreviousGamepad = joystick.Gamepad\n            joystick.Gamepad = e.gamepad\n            if (joystick.PreviousGamepad == null) {\n                joystick.PreviousGamepad = e.gamepad\n            }\n        }\n\n        if (this.#DEBUG) this.#removeStatus()\n    }\n\n    /**\n     * Handles disconnecting a joystick\n     * @param e Gamepad event\n     */\n    #onGamePadDisconnected(e) {\n        if (this.#DEBUG) { console.log('Game pad disconnected') }\n        if (this.#DEBUG) this.#showStatus(\"Gamepad is NOT connected. Connect the gamepad and press a button.\")\n        this.removeJoystick(e.gamepad.index)\n        this.#game.disconnect()\n    }\n\n    /**\n     * Creates an Joystick and adds it to this arcade\n     * @param joystickNumber Unique identifier given by the joystick\n     * @param numOfButtons Sets number of buttons on joystick\n     */\n    createAndAddJoystick(joystickNumber, numOfButtons) {\n        let joystickCheck = this.getJoystickByNumber(joystickNumber)\n        if (joystickCheck != null) {\n            return joystickCheck\n        }\n\n        let joystickNew = new Joystick(joystickNumber, numOfButtons, this.#DEBUG)\n        this.#joysticks[joystickNumber] = joystickNew\n        if (joystickNew) {\n            document.dispatchEvent(new CustomEvent(\"joystickcreated\", { detail: joystickNumber }))\n            console.log(\"joystick created\")\n        }\n        return joystickNew\n    }\n\n    /**\n     * Removes a Joystick from this arcade\n     * @param joystickNumber Unique identifier of the joystick\n     */\n    removeJoystick(joystickNumber) {\n        let joystickCheck = this.getJoystickByNumber(joystickNumber)\n        if (joystickCheck == null) {\n            return\n        }\n\n        var index = this.#joysticks.indexOf(joystickCheck)\n        if(typeof this.#joysticks[index].destroy === 'function'){\n            this.#joysticks[index].destroy()\n        }\n        if (index > -1) {\n            this.#joysticks.splice(index, 1)\n        }\n    }\n\n    /**\n     * Get a Joystick with its unique identifier\n     * @param joystickNumber Unique identifier given by the joystick\n     */\n    getJoystickByNumber(joystickNumber) {\n        for (let joystick of this.#joysticks) {\n            if (joystick.JoystickNumber == joystickNumber) {\n                return joystick\n            }\n        }\n        return null\n    }\n\n    #showStatus(content) {\n        let container\n        let p\n        if (!(container = document.getElementsByTagName(\"status\")[0])) {\n            container = document.createElement(\"status\")\n            document.body.append(container)\n        }\n        if (container) {\n            if (!(p = container.getElementsByTagName(\"p\")[0])) {\n                p = document.createElement(\"p\")\n                container.appendChild(p)\n            }\n        }\n        if (p) {\n            p.innerHTML = content\n        }\n    }\n\n    #removeStatus() {\n        let status\n        if (status = document.getElementsByTagName(\"status\")[0]) {\n            status.remove()\n        }\n    }\n}"],"names":["template","document","createElement","innerHTML","_panelHeight","_classPrivateFieldLooseKey","_panelSpacing","_joystick","_numberOfButtons","_buttonDivs","_left","_right","_up","_down","_rootElement","_createListenersForButtons","_handleButtonClicks","_createHTMLForButtons","_createHTMLForAxes","DebugPanel","_HTMLElement","joystick","numOfButtons","_this","call","this","Object","defineProperty","_assertThisInitialized","value","_createHTMLForAxes2","_createHTMLForButtons2","_handleButtonClicks2","_createListenersForButtons2","writable","Axes","_classPrivateFieldLooseBase","spaceFromTop","JoystickNumber","style","top","height","appendChild","identifier","classList","add","attachShadow","mode","shadowRoot","temp","content","cloneNode","body","prototype","update","remove","_wrapNativeSuper","HTMLElement","_this2","_loop","i","addEventListener","ButtonEvents","e","event","index","filter","Math","random","buttonWrapper","className","buttonDiv","backgroundColor","push","axesWrapper","cell","window","customElements","define","_DEBUG","_BUT","_BUT2","_joystickNumber","_numberOfBUttons","_buttonEvents","_axes","_gamepad","_previousGamepad","_previousJoystickDirection","_readGamepad","_buttonPressed","Joystick","joystickNumber","debug","_buttonPressed2","_readGamepad2","debugPanel","_proto","navigator","getGamepads","gamepad","destroy","_createClass","key","get","round","set","previousGamepad","buttons","dispatchEvent","Event","axes","Left","Right","Up","Down","Neutral","b","pressed","_joysticks","_REDIRECT_URL","_multiplayer","_game","_onRedirect","_onGamePadConnected","_onGamePadDisconnected","_showStatus","_removeStatus","Arcade","game","mp","_removeStatus2","_showStatus2","_onGamePadDisconnected2","_onGamePadConnected2","_onRedirect2","createAndAddJoystick","joystickCheck","getJoystickByNumber","joystickNew","CustomEvent","detail","console","log","removeJoystick","indexOf","splice","_step","_iterator","_createForOfIteratorHelperLoose","done","location","href","length","PreviousGamepad","Gamepad","disconnect","container","p","getElementsByTagName","append","status"],"mappings":"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"}